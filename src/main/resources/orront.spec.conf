#
# ORR Ont runtime configuration specification (tscfg)
#

admin {
  password = "string"
  email    = "string"

  # comma-separated list of usernames
  extra    = "string?"
}

auth {
  # secret: required. A strong password used to generate/verify authentication tokens
  secret = "string"
}

deployment {
  ## url: required. The URL of this ORR instance. (No trailing slash.)
  url = "string"

  ## (required) SPARQL endpoint URL.  (No trailing slash.)
  ## This could be a full URL ("https://example.net/sparql")
  ## or a path relative to the orr-portal host ("/sparql")
  sparqlEndpoint = "string"
}

branding {
  instanceName: string

  footer: "string?"

  ## (optional) URL of image to show in the page header.
  ## By default, this will be MMI ORR's logo. (orr-portal does that)
  logo: "string?"

  ## (optional) URL for "Terms of Use" link.
  ## No default value.
  tou: "string?"

  ## (optional) "Contact us" link.
  ## No default value.
  ## Examples: "http://somewhere/contactus", "mailto:addr@example.net"
  contactUs: "string?"
}

#@optional
googleAnalytics {
  propertyId: string
}

#@optional
recaptcha {
  privateKey : string
  siteKey    : string
}

mongo {
  host = "localhost"
  port = 27017
  db   = "orr-ont"

  # user is optional (with pw required if user is given)
  user = "string?"
  pw   = "string?"

  ontologies    = "ontologies"
  users         = "users"
  organizations = "organizations"
}

files {
  baseDirectory = "string"
}

agraph {
  host = "localhost"
  port = 10035

  userName = "string"
  password = "string"

  repoName  = "mmiorr"

  sparqlEndpoint = "string"

  initDelay = "duration:seconds?"
}

## --------------------------------------------------------------------------------------------------
## (Required) email related information used for user account management and notifications.
email {
  ## account used for sending emails
  account {
    username = "string"
    password = "string"
  }

  ## email server parameters
  server {
    host = "string"
    port = "Int"
    prot = "smtps"
    debug = false
  }

  from    = "string"
  replyTo = "string"
  mailer  = "string"
}
